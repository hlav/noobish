extends ../layout

append body
  .container
    br
    br
    br
    br
    br
    br
    //- p #{venture.venture}
    input#file_input(type='file')
    p#status Please select a file
    img#preview(src='/images/default.png')
    form(method='POST', action='/pic')
      input#avatar_url(type='hidden', name='avatar_url', value='/public/default.png')
      input(type='text', name='username', placeholder='Username')
      br
      input(type='text', name='full_name', placeholder='Full name')
      br
      br
      input(type='submit', value='Update profile')
    
    script.
     function() {
     document.getElementById("file_input").onchange = function(){
     var files = document.getElementById("file_input").files;
     var file = files[0];
     if(file == null){
     alert("No file selected.");
     }
     else{
     get_signed_request(file);
     }
     };
     };
      
     function get_signed_request(file){
     var xhr = new XMLHttpRequest();
     xhr.open("GET", "/sign_s3?file_name="+file.name+"&file_type="+file.type);
     xhr.onreadystatechange = function(){
     if(xhr.readyState === 4){
     if(xhr.status === 200){
     var response = JSON.parse(xhr.responseText);
     upload_file(file, response.signed_request, response.url);
     }
     else{
     alert("Could not get signed URL.");
     }
     }
     };
     xhr.send();
     }
     
     function upload_file(file, signed_request, url){
     var xhr = new XMLHttpRequest();
     xhr.open("PUT", signed_request);
     xhr.setRequestHeader('x-amz-acl', 'public-read');
     xhr.onload = function() {
     if (xhr.status === 200) {
     document.getElementById("preview").src = url;
     document.getElementById("avatar_url").value = url;
     }
     };
     xhr.onerror = function() {
     alert("Could not upload file.");
     };
     xhr.send(file);
     } 
     
     app.get('/sign_s3', function(req, res){
     aws.config.update({accessKeyId: AWS_ACCESS_KEY, secretAccessKey: AWS_SECRET_KEY});
     var s3 = new aws.S3();
     var s3_params = {
     Bucket: S3_BUCKET,
     Key: req.query.file_name,
     Expires: 60,
     ContentType: req.query.file_type,
     ACL: 'public-read'
     };
     s3.getSignedUrl('putObject', s3_params, function(err, data){
     if(err){
     console.log(err);
     }
     else{
     var return_data = {
     signed_request: data,
     url: 'https://'+S3_BUCKET+'.s3.amazonaws.com/'+req.query.file_name
     };
     res.write(JSON.stringify(return_data));
     res.end();
     }
     });
     });
 
     
    script(src='https://sdk.amazonaws.com/js/aws-sdk-2.2.33.min.js')
  
